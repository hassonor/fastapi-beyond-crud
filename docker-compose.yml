services:
  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    # Map container's port 8000 to host's 8007 (example):
    ports:
      - "8007:8000"
    depends_on:
      - book_db_server
      - redis
    env_file:
      - .env
    networks:
      - my_network

  book_db_server:
    image: "postgres:14.0"
    container_name: book_db_server
    ports:
      - "6009:5432"
    environment:
      POSTGRES_USER: book_db
      POSTGRES_PASSWORD: book_db_password
      POSTGRES_DB: book_service
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U book_db -d book_service -h localhost" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - book_db_server
    networks:
      - my_network

  redis:
    image: redis:7-alpine
    container_name: redis_server
    command: [ "redis-server", "--save", "", "--appendonly", "no" ]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - my_network

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - my_network

volumes:
  db-data:
  redisdata:
  pgadmin_data:

networks:
  my_network:
    name: my_network
